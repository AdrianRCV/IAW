"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/react-is";
exports.ids = ["vendor-chunks/react-is"];
exports.modules = {

/***/ "(ssr)/./node_modules/react-is/cjs/react-is.development.js":
/*!***********************************************************!*\
  !*** ./node_modules/react-is/cjs/react-is.development.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("/** @license React v16.13.1\r\n * react-is.development.js\r\n *\r\n * Copyright (c) Facebook, Inc. and its affiliates.\r\n *\r\n * This source code is licensed under the MIT license found in the\r\n * LICENSE file in the root directory of this source tree.\r\n */\r\n\r\n\r\n\r\n\r\n\r\nif (true) {\r\n  (function() {\r\n'use strict';\r\n\r\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\r\n// nor polyfill, then a plain number is used for performance.\r\nvar hasSymbol = typeof Symbol === 'function' && Symbol.for;\r\nvar REACT_ELEMENT_TYPE = hasSymbol ? Symbol.for('react.element') : 0xeac7;\r\nvar REACT_PORTAL_TYPE = hasSymbol ? Symbol.for('react.portal') : 0xeaca;\r\nvar REACT_FRAGMENT_TYPE = hasSymbol ? Symbol.for('react.fragment') : 0xeacb;\r\nvar REACT_STRICT_MODE_TYPE = hasSymbol ? Symbol.for('react.strict_mode') : 0xeacc;\r\nvar REACT_PROFILER_TYPE = hasSymbol ? Symbol.for('react.profiler') : 0xead2;\r\nvar REACT_PROVIDER_TYPE = hasSymbol ? Symbol.for('react.provider') : 0xeacd;\r\nvar REACT_CONTEXT_TYPE = hasSymbol ? Symbol.for('react.context') : 0xeace; // TODO: We don't use AsyncMode or ConcurrentMode anymore. They were temporary\r\n// (unstable) APIs that have been removed. Can we remove the symbols?\r\n\r\nvar REACT_ASYNC_MODE_TYPE = hasSymbol ? Symbol.for('react.async_mode') : 0xeacf;\r\nvar REACT_CONCURRENT_MODE_TYPE = hasSymbol ? Symbol.for('react.concurrent_mode') : 0xeacf;\r\nvar REACT_FORWARD_REF_TYPE = hasSymbol ? Symbol.for('react.forward_ref') : 0xead0;\r\nvar REACT_SUSPENSE_TYPE = hasSymbol ? Symbol.for('react.suspense') : 0xead1;\r\nvar REACT_SUSPENSE_LIST_TYPE = hasSymbol ? Symbol.for('react.suspense_list') : 0xead8;\r\nvar REACT_MEMO_TYPE = hasSymbol ? Symbol.for('react.memo') : 0xead3;\r\nvar REACT_LAZY_TYPE = hasSymbol ? Symbol.for('react.lazy') : 0xead4;\r\nvar REACT_BLOCK_TYPE = hasSymbol ? Symbol.for('react.block') : 0xead9;\r\nvar REACT_FUNDAMENTAL_TYPE = hasSymbol ? Symbol.for('react.fundamental') : 0xead5;\r\nvar REACT_RESPONDER_TYPE = hasSymbol ? Symbol.for('react.responder') : 0xead6;\r\nvar REACT_SCOPE_TYPE = hasSymbol ? Symbol.for('react.scope') : 0xead7;\r\n\r\nfunction isValidElementType(type) {\r\n  return typeof type === 'string' || typeof type === 'function' || // Note: its typeof might be other than 'symbol' or 'number' if it's a polyfill.\r\n  type === REACT_FRAGMENT_TYPE || type === REACT_CONCURRENT_MODE_TYPE || type === REACT_PROFILER_TYPE || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || typeof type === 'object' && type !== null && (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_FORWARD_REF_TYPE || type.$$typeof === REACT_FUNDAMENTAL_TYPE || type.$$typeof === REACT_RESPONDER_TYPE || type.$$typeof === REACT_SCOPE_TYPE || type.$$typeof === REACT_BLOCK_TYPE);\r\n}\r\n\r\nfunction typeOf(object) {\r\n  if (typeof object === 'object' && object !== null) {\r\n    var $$typeof = object.$$typeof;\r\n\r\n    switch ($$typeof) {\r\n      case REACT_ELEMENT_TYPE:\r\n        var type = object.type;\r\n\r\n        switch (type) {\r\n          case REACT_ASYNC_MODE_TYPE:\r\n          case REACT_CONCURRENT_MODE_TYPE:\r\n          case REACT_FRAGMENT_TYPE:\r\n          case REACT_PROFILER_TYPE:\r\n          case REACT_STRICT_MODE_TYPE:\r\n          case REACT_SUSPENSE_TYPE:\r\n            return type;\r\n\r\n          default:\r\n            var $$typeofType = type && type.$$typeof;\r\n\r\n            switch ($$typeofType) {\r\n              case REACT_CONTEXT_TYPE:\r\n              case REACT_FORWARD_REF_TYPE:\r\n              case REACT_LAZY_TYPE:\r\n              case REACT_MEMO_TYPE:\r\n              case REACT_PROVIDER_TYPE:\r\n                return $$typeofType;\r\n\r\n              default:\r\n                return $$typeof;\r\n            }\r\n\r\n        }\r\n\r\n      case REACT_PORTAL_TYPE:\r\n        return $$typeof;\r\n    }\r\n  }\r\n\r\n  return undefined;\r\n} // AsyncMode is deprecated along with isAsyncMode\r\n\r\nvar AsyncMode = REACT_ASYNC_MODE_TYPE;\r\nvar ConcurrentMode = REACT_CONCURRENT_MODE_TYPE;\r\nvar ContextConsumer = REACT_CONTEXT_TYPE;\r\nvar ContextProvider = REACT_PROVIDER_TYPE;\r\nvar Element = REACT_ELEMENT_TYPE;\r\nvar ForwardRef = REACT_FORWARD_REF_TYPE;\r\nvar Fragment = REACT_FRAGMENT_TYPE;\r\nvar Lazy = REACT_LAZY_TYPE;\r\nvar Memo = REACT_MEMO_TYPE;\r\nvar Portal = REACT_PORTAL_TYPE;\r\nvar Profiler = REACT_PROFILER_TYPE;\r\nvar StrictMode = REACT_STRICT_MODE_TYPE;\r\nvar Suspense = REACT_SUSPENSE_TYPE;\r\nvar hasWarnedAboutDeprecatedIsAsyncMode = false; // AsyncMode should be deprecated\r\n\r\nfunction isAsyncMode(object) {\r\n  {\r\n    if (!hasWarnedAboutDeprecatedIsAsyncMode) {\r\n      hasWarnedAboutDeprecatedIsAsyncMode = true; // Using console['warn'] to evade Babel and ESLint\r\n\r\n      console['warn']('The ReactIs.isAsyncMode() alias has been deprecated, ' + 'and will be removed in React 17+. Update your code to use ' + 'ReactIs.isConcurrentMode() instead. It has the exact same API.');\r\n    }\r\n  }\r\n\r\n  return isConcurrentMode(object) || typeOf(object) === REACT_ASYNC_MODE_TYPE;\r\n}\r\nfunction isConcurrentMode(object) {\r\n  return typeOf(object) === REACT_CONCURRENT_MODE_TYPE;\r\n}\r\nfunction isContextConsumer(object) {\r\n  return typeOf(object) === REACT_CONTEXT_TYPE;\r\n}\r\nfunction isContextProvider(object) {\r\n  return typeOf(object) === REACT_PROVIDER_TYPE;\r\n}\r\nfunction isElement(object) {\r\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\r\n}\r\nfunction isForwardRef(object) {\r\n  return typeOf(object) === REACT_FORWARD_REF_TYPE;\r\n}\r\nfunction isFragment(object) {\r\n  return typeOf(object) === REACT_FRAGMENT_TYPE;\r\n}\r\nfunction isLazy(object) {\r\n  return typeOf(object) === REACT_LAZY_TYPE;\r\n}\r\nfunction isMemo(object) {\r\n  return typeOf(object) === REACT_MEMO_TYPE;\r\n}\r\nfunction isPortal(object) {\r\n  return typeOf(object) === REACT_PORTAL_TYPE;\r\n}\r\nfunction isProfiler(object) {\r\n  return typeOf(object) === REACT_PROFILER_TYPE;\r\n}\r\nfunction isStrictMode(object) {\r\n  return typeOf(object) === REACT_STRICT_MODE_TYPE;\r\n}\r\nfunction isSuspense(object) {\r\n  return typeOf(object) === REACT_SUSPENSE_TYPE;\r\n}\r\n\r\nexports.AsyncMode = AsyncMode;\r\nexports.ConcurrentMode = ConcurrentMode;\r\nexports.ContextConsumer = ContextConsumer;\r\nexports.ContextProvider = ContextProvider;\r\nexports.Element = Element;\r\nexports.ForwardRef = ForwardRef;\r\nexports.Fragment = Fragment;\r\nexports.Lazy = Lazy;\r\nexports.Memo = Memo;\r\nexports.Portal = Portal;\r\nexports.Profiler = Profiler;\r\nexports.StrictMode = StrictMode;\r\nexports.Suspense = Suspense;\r\nexports.isAsyncMode = isAsyncMode;\r\nexports.isConcurrentMode = isConcurrentMode;\r\nexports.isContextConsumer = isContextConsumer;\r\nexports.isContextProvider = isContextProvider;\r\nexports.isElement = isElement;\r\nexports.isForwardRef = isForwardRef;\r\nexports.isFragment = isFragment;\r\nexports.isLazy = isLazy;\r\nexports.isMemo = isMemo;\r\nexports.isPortal = isPortal;\r\nexports.isProfiler = isProfiler;\r\nexports.isStrictMode = isStrictMode;\r\nexports.isSuspense = isSuspense;\r\nexports.isValidElementType = isValidElementType;\r\nexports.typeOf = typeOf;\r\n  })();\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-is/cjs/react-is.development.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/react-is/index.js":
/*!****************************************!*\
  !*** ./node_modules/react-is/index.js ***!
  \****************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("\r\n\r\nif (false) {} else {\r\n  module.exports = __webpack_require__(/*! ./cjs/react-is.development.js */ \"(ssr)/./node_modules/react-is/cjs/react-is.development.js\");\r\n}\r\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvcmVhY3QtaXMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLElBQUksS0FBcUMsRUFBRSxFQUUxQyxDQUFDO0FBQ0YsRUFBRSxzSUFBeUQ7QUFDM0QiLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcVVNVQVJJT1xcT25lRHJpdmVcXEVzY3JpdG9yaW9cXFJlcG9zaXRvcmlvc1xcSUFXXFxuZXh0YXNpclxcbm9kZV9tb2R1bGVzXFxyZWFjdC1pc1xcaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xyXG5cclxuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcclxuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWlzLnByb2R1Y3Rpb24ubWluLmpzJyk7XHJcbn0gZWxzZSB7XHJcbiAgbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL2Nqcy9yZWFjdC1pcy5kZXZlbG9wbWVudC5qcycpO1xyXG59XHJcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/react-is/index.js\n");

/***/ })

};
;